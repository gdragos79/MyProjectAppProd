name: CI (Build & Test)

on:
  pull_request:
    branches: [ main, staging, development ]
  push:
    branches:
      - '**'            # run CI on pushes to any branch
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    name: Backend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      - run: npm ci
      - run: npm test --if-present
      - run: npm run build --if-present

  frontend:
    name: Frontend CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: react
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: react/package-lock.json
      - run: npm ci
      - run: npm test --if-present
      - run: npm run build --if-present

  images:
    name: Docker Build (validate only; push handled in deploy jobs)
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    env:
      IMAGE_FRONTEND: ghcr.io/gdragos79/myprojectappprod-frontend
      IMAGE_BACKEND:  ghcr.io/gdragos79/myprojectappprod-backend
    steps:
      - uses: actions/checkout@v4

      # Build images to ensure Dockerfiles & contexts are valid.
      # No login and no push here (deploy workflows will push).
      - name: Build backend image (no push)
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: false
          tags: ${{ env.IMAGE_BACKEND }}:ci-${{ github.run_id }}

      - name: Build frontend image (no push)
        uses: docker/build-push-action@v6
        with:
          context: ./react
          push: false
          tags: ${{ env.IMAGE_FRONTEND }}:ci-${{ github.run_id }}
