name: Deploy (Development)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Image tag to deploy (sha7 or 'latest')"
        required: true
        default: "latest"

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Development       # uses Development environment & its secrets
    concurrency:
      group: deploy-development
      cancel-in-progress: true
    steps:
      - name: SSH & Deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key:      ${{ secrets.SSH_KEY }}
          script_stop: true
          script: |
            set -e
            mkdir -p ~/app
            cd ~/app

            # write .env from environment secrets
            cat > .env <<'EOF'
            TAG=${{ github.event.inputs.tag }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_NAME=${{ secrets.DB_NAME }}
            EOF

            # write docker-compose.yml if not present (first time)
            if [ ! -f docker-compose.yml ]; then
              cat > docker-compose.yml <<'YAML'
            version: "3.8"
            services:
              frontend:
                image: ghcr.io/${{ github.repository }}-frontend:${TAG:-latest}
                ports:
                  - "80:80"
                depends_on:
                  - backend

              backend:
                image: ghcr.io/${{ github.repository }}-backend:${TAG:-latest}
                environment:
                  DB_HOST: ${DB_HOST}
                  DB_PORT: ${DB_PORT}
                  DB_USER: ${DB_USER}
                  DB_PASSWORD: ${DB_PASSWORD}
                  DB_NAME: ${DB_NAME}
                ports:
                  - "3000:3000"
            YAML
            fi

            docker compose --env-file .env pull
            docker compose --env-file .env up -d
            docker compose ps
