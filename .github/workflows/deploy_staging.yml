name: Promote — Staging validates GREEN then flips

on:
  workflow_dispatch: {}   # run this when UAT is ready
  # Optionally auto-run after Development completes:
  # workflow_run:
  #   workflows: [ "Deploy — Development (Build/Test → Deploy GREEN, No Flip)" ]
  #   types: [ "completed" ]

jobs:
  validate-and-flip:
    runs-on: ubuntu-latest
    # If you plan to auto-file an issue on failure, uncomment permissions below
    # permissions:
    #   contents: write
    #   issues: write

    steps:
      - name: Show current live color (for context)
        id: live
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.PROXY_SSH_HOST }}
          username: ${{ secrets.PROXY_SSH_USER }}
          key: ${{ secrets.PROXY_SSH_KEY }}
          script: |
            set -e
            STATE=/var/lib/myproject/live_color
            if [ -f "$STATE" ]; then cat "$STATE"; else echo "blue"; fi

      - name: Prisma migrate (GREEN, idempotent)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.APP_GREEN_SSH_HOST }}
          username: ${{ secrets.APP_GREEN_SSH_USER }}
          key: ${{ secrets.APP_GREEN_SSH_KEY }}
          script: |
            set -e
            cd ~/app
            docker run --rm --network host               -e DATABASE_URL="postgresql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}?schema=public"               -v $PWD:/work -w /work node:20 bash -lc "
                npm -C backend ci
                npx -C backend prisma generate
                npx -C backend prisma migrate deploy
              "

      - name: UAT / integration checks on GREEN
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.APP_GREEN_SSH_HOST }}
          username: ${{ secrets.APP_GREEN_SSH_USER }}
          key: ${{ secrets.APP_GREEN_SSH_KEY }}
          script: |
            set -e
            # Basic health
            curl -fsS http://localhost:3000/healthz
            curl -I http://localhost/
            # TODO: Add app-specific checks here (e.g., key endpoints, smoke tests)

      # If we reached here, GREEN is good → flip proxy to GREEN
      - name: Flip proxy to GREEN
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.PROXY_SSH_HOST }}
          username: ${{ secrets.PROXY_SSH_USER }}
          key: ${{ secrets.PROXY_SSH_KEY }}
          script: |
            set -e
            cd /home/gdragos/proxy/nginx/upstreams
            ln -sfn ../upstream-green.conf active.conf
            echo "green" | sudo tee /var/lib/myproject/live_color
            cd /home/gdragos/proxy
            docker compose exec proxy nginx -s reload

      # Example: file an issue back to Dev if any step failed (kept commented by default)
      # - name: File an issue back to Dev
      #   if: failure()
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       github.rest.issues.create({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         title: "Staging validation failed",
      #         body: "Staging checks failed on GREEN. Please investigate and push fixes to development."
      #       })
