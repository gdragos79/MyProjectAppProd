name: Staging (build, push, deploy to 192.168.238.141) [PROPOSED]

on:
  workflow_dispatch: {}

permissions:
  contents: write
  packages: write

env:
  IMAGE_BACKEND: ghcr.io/${{ github.repository_owner }}/myprojectappprod-backend

jobs:
  staging:
    runs-on: ubuntu-latest
    environment: Staging
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Compute build tag
        id: tag
        shell: bash
        run: |
          set -euo pipefail
          DATE="$(date +'%d_%m_%Y')"
          BRANCH="main"
          git fetch --tags
          LAST=$(git tag -l "build-${DATE}-${BRANCH}-v*" | sort -V | tail -n1 || true)
          if [ -z "$LAST" ]; then
            V="1.0"
          else
            CUR=$(echo "$LAST" | sed -E 's/.*-v([0-9]+\.[0-9]+)$/\1/')
            MAJOR=$(echo "$CUR" | cut -d. -f1)
            MINOR=$(echo "$CUR" | cut -d. -f2)
            MINOR=$((MINOR+1))
            V="${MAJOR}.${MINOR}"
          fi
          TAG_HUMAN="${DATE}_v${V}_${BRANCH}"
          GIT_TAG="build-${DATE}-${BRANCH}-v${V}"
          echo "TAG_HUMAN=$TAG_HUMAN" >> $GITHUB_OUTPUT
          echo "GIT_TAG=$GIT_TAG" >> $GITHUB_OUTPUT

      - name: Create & push git tag for build
        run: |
          git tag "${{ steps.tag.outputs.GIT_TAG }}"
          git push origin "${{ steps.tag.outputs.GIT_TAG }}"

      - name: Login GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u "${{ secrets.GHCR_USERNAME }}" --password-stdin

      - name: Build backend
        working-directory: apps/backend
        run: docker build -t "${{ env.IMAGE_BACKEND }}:${{ steps.tag.outputs.TAG_HUMAN }}" .

      - name: Push backend
        run: docker push "${{ env.IMAGE_BACKEND }}:${{ steps.tag.outputs.TAG_HUMAN }}"

      - name: Prepare SSH
        run: |
          install -m 700 -d ~/.ssh
          echo "${{ secrets.STAGING_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H "${{ secrets.STAGING_SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Deploy to 192.168.238.141 (3001:3000)
        env:
          HOST: ${{ secrets.STAGING_SSH_HOST }}
          USER: ${{ secrets.STAGING_SSH_USER }}
          TAG:  ${{ steps.tag.outputs.TAG_HUMAN }}
          IMAGE: ${{ env.IMAGE_BACKEND }}
          DB_HOST: ${{ secrets.STG_DB_HOST }}
          DB_PORT: ${{ secrets.STG_DB_PORT }}
          DB_USER: ${{ secrets.STG_DB_USER }}
          DB_PASS: ${{ secrets.STG_DB_PASSWORD }}
          DB_NAME: ${{ secrets.STG_DB_NAME }}
        run: |
          set -e
          CONTAINER="stgContainer_${TAG}"
          ssh -i ~/.ssh/id_ed25519 ${USER}@${HOST} "docker rm -f $(docker ps -a -q --filter name=stgContainer_) || true"
          ssh -i ~/.ssh/id_ed25519 ${USER}@${HOST} "docker pull ${IMAGE}:${TAG}"
          ssh -i ~/.ssh/id_ed25519 ${USER}@${HOST} "docker run -d --name ${CONTAINER} --restart unless-stopped -e DB_HOST='${DB_HOST}' -e DB_PORT='${DB_PORT}' -e DB_USER='${DB_USER}' -e DB_PASSWORD='${DB_PASS}' -e DB_NAME='${DB_NAME}' -p 3001:3000 ${IMAGE}:${TAG}"

      - name: Health check staging
        env:
          HOST: ${{ secrets.STAGING_SSH_HOST }}
        run: |
          for i in {1..30}; do
            if curl -fsS "http://${HOST}:3001/api/health" | grep -q '"ok":true'; then
              echo OK; exit 0
            fi
            sleep 5
          done
          exit 1

      - name: Promote (prod tag + prod/ git tag)
        run: |
          docker pull "${{ env.IMAGE_BACKEND }}:${{ steps.tag.outputs.TAG_HUMAN }}"
          docker tag  "${{ env.IMAGE_BACKEND }}:${{ steps.tag.outputs.TAG_HUMAN }}" "${{ env.IMAGE_BACKEND }}:prod-${{ steps.tag.outputs.TAG_HUMAN }}"
          docker push "${{ env.IMAGE_BACKEND }}:prod-${{ steps.tag.outputs.TAG_HUMAN }}"
          git tag "prod/${{ steps.tag.outputs.TAG_HUMAN }}"
          git push origin "prod/${{ steps.tag.outputs.TAG_HUMAN }}"
