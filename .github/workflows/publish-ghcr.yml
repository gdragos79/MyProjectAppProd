name: Publish images to GHCR

on:
  push:
    branches: [ "main" ]
    paths:
      - "backend/**"
      - "frontend/**"
      - ".github/workflows/publish-ghcr.yml"
  workflow_dispatch:

concurrency:
  group: publish-ghcr-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build-and-push:
    name: Build & Push (backend + frontend)
    runs-on: ubuntu-latest

    # IMPORTANT: allow pushing to GHCR using GITHUB_TOKEN
    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: backend
            context: ./backend
            dockerfile: ./backend/Dockerfile
            image: ghcr.io/gdragos79/myprojectapp-backend
          - name: frontend
            context: ./frontend
            dockerfile: ./frontend/Dockerfile
            image: ghcr.io/gdragos79/myprojectapp-frontend

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker metadata (tags + labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          tags: |
            type=raw,value=latest
            type=sha,format=short
            type=ref,event=tag
          labels: |
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build & push ${{ matrix.name }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64
